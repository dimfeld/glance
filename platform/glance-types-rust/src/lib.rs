#![warn(missing_docs)]
//! Types for mini-apps that are built for the Glance dashboard platform

// app_data is autogenerated so won't have all docs, but many are generated from the JSON schema so
// it's not too bad
#[allow(missing_docs)]
mod app_data;

use std::path::PathBuf;

pub use app_data::*;

/// Common paths useful for mini-apps
pub struct Paths {
    /// The name of the application
    pub app_id: String,
}

impl Paths {
    /// Create a new `Paths` for the given application
    pub fn new(app_id: String) -> Self {
        Self { app_id }
    }

    /// The base data directory for the Glance platform
    pub fn base_data_dir() -> PathBuf {
        [
            dirs::data_local_dir().unwrap().to_string_lossy().as_ref(),
            "glance-dashboards",
            #[cfg(os = "windows")]
            "Data",
        ]
        .iter()
        .collect()
    }

    /// The directory that holds the app data files
    pub fn app_data_dir() -> PathBuf {
        Self::base_data_dir().join("app_data")
    }

    /// The JSON file that the app should write to
    pub fn app_data_file(&self) -> PathBuf {
        Self::app_data_dir().join(format!("{}.json", self.app_id))
    }

    /// A directory that the app can optionally use to store its internal state.
    pub fn app_state_dir(&self) -> PathBuf {
        Self::base_data_dir().join("app_state")
    }
}
