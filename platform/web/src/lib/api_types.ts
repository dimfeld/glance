// This file is autogenerated by the API's `util sync-types` command.
import { z, type ZodTypeAny } from 'zod';

function memoizeOne<T extends ZodTypeAny>(fn: () => T) : () => T {
  let cached: T|undefined;
  return function() {
    if(!cached) {
      cached = fn();
    }
    return cached;
  };
}

export const SelfUser = memoizeOne(() => z.object({permissions: z.array(z.string()), roles: z.array(z.string()), user: z.lazy(User), }));
export type SelfUser = z.infer<ReturnType<typeof SelfUser>>;


export const User = memoizeOne(() => z.object({avatar_url: z.union([z.string(), z.null(), ]), created_at: z.coerce.date(), email: z.union([z.string(), z.null(), ]), id: z.string(), name: z.string(), organization_id: z.union([z.string(), z.null(), ]), updated_at: z.coerce.date(), }));
export type User = z.infer<ReturnType<typeof User>>;
